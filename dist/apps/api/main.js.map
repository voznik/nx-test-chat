{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/websockets\"","webpack:///./apps/api/src/app/app.logger.ts","webpack:///external \"@nestjs-addons/in-memory-db\"","webpack:///./apps/api/src/app/chat/chat-users.service.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/chat/chat.guard.ts","webpack:///./apps/api/src/app/chat/chat.service.ts","webpack:///./libs/data/src/index.ts","webpack:///external \"@nestjs/core\"","webpack:///external \"ws\"","webpack:///./libs/data/src/lib/api-interfaces.ts","webpack:///./libs/data/src/lib/data.ts","webpack:///./libs/data/src/lib/helpers/index.ts","webpack:///./libs/data/src/lib/helpers/rxjs.helpers.ts","webpack:///external \"@nestjs/microservices\"","webpack:///external \"@nestjs/platform-ws\"","webpack:///./apps/api/src/app/app.module.ts","webpack:///external \"nestjs-session\"","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/chat/chat.module.ts","webpack:///./apps/api/src/app/chat/chat-users.controller.ts","webpack:///./apps/api/src/app/chat/chat.gateway.ts","webpack:///external \"rxjs\"","webpack:///./apps/api/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/websockets\");","import { Injectable, Scope, Logger } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class AppLogger extends Logger {}\n\nimport { Module } from '@nestjs/common';\n\n@Module({\n  providers: [AppLogger],\n  exports: [AppLogger],\n})\nexport class LoggerModule {}\n","module.exports = require(\"@nestjs-addons/in-memory-db\");","import { Injectable } from '@nestjs/common';\nimport { User } from '@test-chat/data';\nimport { InMemoryDBService } from '@nestjs-addons/in-memory-db';\n\n@Injectable()\nexport class ChatUsersService extends InMemoryDBService<User> {\n  private count = 0;\n\n  prePoulate(count: number): User[] {\n    this.count = count;\n    const recordFactory = (idx: number): Partial<User> => ({\n      id: idx,\n      name: `User${idx}`,\n    });\n\n    this.seed(recordFactory, count);\n    return this.getAll();\n  }\n\n  addUser(userName: string): User {\n    const existing = this.findByName(userName);\n    if (existing) {\n      return;\n    }\n    const user: User = { id: ++this.count, name: userName };\n    return this.create(user);\n  }\n\n  findByName(userName: string) {\n    return this.query((record) => record.name === userName)[0] || null;\n  }\n}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  root(): string {\n    return 'Hello World!';\n  }\n}\n","import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  Session,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AppLogger } from '../app.logger';\n\n@Injectable()\nexport class ChatAuthGuard implements CanActivate {\n  constructor(private logger: AppLogger) {\n    this.logger.setContext('ChatAuthGuard');\n  }\n\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    const ctx = context.switchToWs();\n    const client = ctx.getClient();\n    const handler = context.getHandler().name;\n    this.logger.log('canActivate');\n    return true;\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { Message } from '@test-chat/data';\nimport { InMemoryDBService } from '@nestjs-addons/in-memory-db';\n\n@Injectable()\nexport class ChatService extends InMemoryDBService<Message> {\n  prePoulate(count: number) {\n    const recordFactory = (idx: number): Partial<Message> => ({\n      id: idx,\n      user: {\n        id: idx,\n        name: `User${idx}`,\n      },\n      message: `Test${idx}`,\n      date: Date.now(),\n    });\n\n    this.seed(recordFactory, count);\n    return this.getAll();\n  }\n}\n","export * from './lib/api-interfaces';\nexport * from './lib/data';\nexport * from './lib/helpers';\n","module.exports = require(\"@nestjs/core\");","module.exports = require(\"ws\");","import { InMemoryDBEntity } from '@nestjs-addons/in-memory-db';\n\nexport interface Message {\n  id: number;\n  user: User;\n  message: string;\n  date: number | Date;\n}\n\nexport class User {\n  id: number;\n  name: string;\n}\n\nexport interface ExampleEntity extends InMemoryDBEntity {\n  message: string;\n}\n","export const DEMO_MESSAGES = [];\n","// start:ng42.barrel\nexport * from './rxjs.helpers';\n// end:ng42.barrel\n\n","import { Subject, Subscriber, Subscription } from 'rxjs';\n\n/**\n * The QueueingSubject is very similar to the ReplaySubject but it only queues values when it has no observers. The queued values are delivered to the first observer that subscribes at which point the queue is reset.\n * @author https://github.com/insidewhy/queueing-subject\n */\nexport class QueueingSubject<T> extends Subject<T> {\n  private queuedValues: T[] = [];\n\n  next(value: T): void {\n    if (this.closed || this.observers.length) super.next(value);\n    else this.queuedValues.push(value);\n  }\n\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // tslint:disable-next-line: deprecation\n    const subscription = super._subscribe(subscriber);\n\n    if (this.queuedValues.length) {\n      this.queuedValues.forEach((value) => super.next(value));\n      this.queuedValues.splice(0);\n    }\n\n    return subscription;\n  }\n}\n","module.exports = require(\"@nestjs/microservices\");","module.exports = require(\"@nestjs/platform-ws\");","import { Module } from '@nestjs/common';\nimport { SessionModule } from 'nestjs-session';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ChatModule } from './chat/chat.module';\nimport { InMemoryDBModule } from '@nestjs-addons/in-memory-db';\nimport { AppLogger, LoggerModule } from './app.logger';\n\n@Module({\n  imports: [\n    SessionModule.forRoot({\n      session: { secret: 'qwerty' },\n    }),\n    InMemoryDBModule.forRoot(),\n    LoggerModule,\n    ChatModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","module.exports = require(\"nestjs-session\");","import { Controller, Get, Session } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  root(@Session() session: { views?: number }) {\n    session.views = (session.views || 0) + 1;\n    return {\n      session,\n      message: this.appService.root(),\n    };\n  }\n}\n","import { InMemoryDBModule } from '@nestjs-addons/in-memory-db';\nimport { Module, Logger } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\nimport { ChatUsersController } from './chat-users.controller';\nimport { ChatUsersService } from './chat-users.service';\nimport { ChatGateway } from './chat.gateway';\nimport { ChatAuthGuard } from './chat.guard';\nimport { ChatService } from './chat.service';\nimport { LoggerModule } from '../app.logger';\n\n@Module({\n  imports: [InMemoryDBModule.forFeature('chat'), LoggerModule],\n  controllers: [/* ChatMessagesController */ ChatUsersController],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: ChatAuthGuard,\n    },\n    // { provide: Logger, useExisting: AppLogger, },\n    ChatGateway,\n    ChatService,\n    ChatUsersService,\n  ],\n})\nexport class ChatModule {}\n","import { Controller, Get, Param } from '@nestjs/common';\nimport { User } from '@test-chat/data';\nimport { ChatUsersService } from './chat-users.service';\n\n@Controller('users')\nexport class ChatUsersController {\n  constructor(private userService: ChatUsersService) {}\n\n  @Get()\n  GetUsers(): User[] {\n    return this.userService.getAll();\n  }\n\n  @Get('seed')\n  GetUser(): User[] {\n    return this.userService.prePoulate(10);\n  }\n\n  @Get(':id')\n  GetUserByID(@Param('id') id: number) {\n    return this.userService.get(+id);\n  }\n}\n","import { UseGuards } from '@nestjs/common';\nimport {\n  MessageBody,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsResponse,\n  ConnectedSocket,\n} from '@nestjs/websockets';\nimport { Message } from '@test-chat/data';\nimport { Request } from 'express';\nimport { Server } from 'ws';\nimport { AppLogger } from '../app.logger';\nimport { ChatUsersService } from './chat-users.service';\nimport { ChatAuthGuard } from './chat.guard';\nimport { ChatService } from './chat.service';\n\nenum WS_STATE {\n  CONNECTING_STATE = 0,\n  OPEN_STATE = 1,\n  CLOSING_STATE = 2,\n  CLOSED_STATE = 3,\n}\n\n@WebSocketGateway(8081, { namespace: 'chat' })\nexport class ChatGateway implements OnGatewayConnection, OnGatewayDisconnect {\n  @WebSocketServer()\n  server: Server;\n\n  constructor(\n    private logger: AppLogger,\n    private chatService: ChatService,\n    private usersService: ChatUsersService\n  ) {\n    this.logger.setContext('ChatGateway');\n  }\n\n  handleConnection(client: any, req: Request) {\n    // extract user credentials and data from request,\n    const userName = this.parseParamFromReqUrl(req.url, 'chatUser');\n    if (!userName) {\n      this.logger.error('Unauthorized');\n      client._socket.write('HTTP/1.1 401 Unauthorized\\r\\n\\r\\n');\n      client._socket.destroy();\n      return;\n    }\n    // A client has connected\n    this.logger.log('connection ok');\n    this.usersService.addUser(userName);\n    // Notify connected clients of current users\n    const event = this.prepareEvent('users', this.usersService.getAll());\n    this.broadcast(event, client);\n  }\n\n  handleDisconnect(client: any) {\n    // A client has disconnected\n    this.logger.log('connection closed');\n    // TODO: should we delete user completely\n    // this.usersService.delete(0);\n    // const event = this.prepareEvent('users', this.usersService.getAll());\n    // Notify connected clients of current users\n    // client.send(event);\n  }\n\n  @UseGuards(ChatAuthGuard)\n  @SubscribeMessage('chat')\n  onChatEvent(@MessageBody() message: Message): WsResponse<any> {\n    this.logger.log('onChatEvent');\n    const data = this.chatService.getAll();\n    return { event: 'messages', data };\n  }\n\n  @UseGuards(ChatAuthGuard)\n  @SubscribeMessage('chatSeed')\n  onChatSeedEvent(@ConnectedSocket() client: WebSocket): WsResponse<any> {\n    this.logger.log('onChatSeed');\n    const data = this.chatService.prePoulate(10);\n    return { event: 'messages', data };\n  }\n\n  @SubscribeMessage('chatMessage')\n  onChatMessageEvent(@MessageBody() message: Message) {\n    this.logger.log('onChatMessageEvent');\n    const user = this.usersService.findByName(message.user.name);\n    this.chatService.create({ ...message, user, date: Date.now() });\n    const data = this.chatService.getAll();\n    const event = this.prepareEvent('messages', data);\n    this.broadcast(event);\n  }\n\n  @SubscribeMessage('users')\n  onUsersEvent(): WsResponse<any> {\n    this.logger.log('users');\n    const data = this.usersService.getAll();\n    return { event: 'users', data };\n  }\n\n  @SubscribeMessage('newUser')\n  onNewUserEvent(\n    @ConnectedSocket() client: WebSocket,\n    @MessageBody() userName: string\n  ): void {\n    this.logger.log('newUser');\n    this.usersService.addUser(userName);\n    const data = this.usersService.getAll();\n    const event = this.prepareEvent('users', data);\n    this.broadcast(event, client);\n  }\n\n  private prepareEvent(event: string = 'events', data: any): string {\n    return JSON.stringify({ event, data });\n  }\n\n  // Notify connected clients of current event\n  private broadcast(event, currentClient?: any) {\n    this.server.clients.forEach((sclient) => {\n      if (sclient.readyState === WS_STATE.OPEN_STATE) {\n        if (!currentClient || (currentClient && sclient !== currentClient)) {\n          sclient.send(event);\n        }\n      }\n    });\n  }\n\n  private parseParamFromReqUrl(queryString: string, param: string): any {\n    const query = {};\n    const pairs = queryString.slice(2).split('&');\n    for (const p of pairs) {\n      const pair = p.split('=');\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n    return query[param];\n  }\n}\n","module.exports = require(\"rxjs\");","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { Transport } from '@nestjs/microservices';\nimport { WsAdapter } from '@nestjs/platform-ws';\nimport { AppLogger } from './app/app.logger';\nimport { AppModule } from './app/app.module';\n\n// https://github.com/artonio/nestjs-session-tutorial-finished/\n// import * as session from 'express-session';\n// import * as passport from 'passport';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule, {\n    logger: false,\n  });\n  const globalPrefix = 'api';\n  const logger = new AppLogger();\n  app.useLogger(logger);\n  app.setGlobalPrefix(globalPrefix);\n  app.useWebSocketAdapter(new WsAdapter(app));\n  // app.useGlobalGuards(new ChatAuthGuard(app.get(AppLogger)));\n  const microservice = app.connectMicroservice({\n    transport: Transport.TCP,\n  });\n  await app.startAllMicroservicesAsync();\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n"],"sourceRoot":""}